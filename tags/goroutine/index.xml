<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Goroutine on Santekno</title><link>https://www.santekno.com/tags/goroutine/</link><description>Recent content in Goroutine on Santekno</description><generator>Hugo -- gohugo.io</generator><language>id</language><lastBuildDate>Sun, 08 Jan 2023 13:28:26 +0700</lastBuildDate><atom:link href="https://www.santekno.com/tags/goroutine/index.xml" rel="self" type="application/rss+xml"/><item><title>Penggunaan Channel Select Range Timeout</title><link>https://www.santekno.com/penggunaan-channel-select-range-timeout/</link><pubDate>Sun, 08 Jan 2023 13:28:26 +0700</pubDate><guid>https://www.santekno.com/penggunaan-channel-select-range-timeout/</guid><description>Adanya channel sangat membantu kita untuk mengelola goroutine yang sedang berjalan pada program kita. Ada kalanya kita juga perlu mengelola goroutine banyak dan dibutuhkan banyak channel juga. Maka, disinilah kegunaan select. select memudahkan kita mengontrol komunikasi data lewat channel. Cara penggunannya sama seperti seleksi kondisi switch.
Program pencarian rata-rata dan nilai tertinggi berikut merupakan contoh sederhana penerapan select dalam channel. Akan ada 2 buah goroutine yang masing-masing di-handle oleh sebuah channel.</description></item><item><title>Pengenalan Channel Pada Golang</title><link>https://www.santekno.com/pengenalan-channel-pada-golang/</link><pubDate>Sun, 08 Jan 2023 13:24:42 +0700</pubDate><guid>https://www.santekno.com/pengenalan-channel-pada-golang/</guid><description>Channel adalah penghubung goroutine yang dari satu ke yang lainnya. Channel ini sifat-nya synchronous karena ada blocking. Channel bisa didefinisikan dengan bentuk variabel dengan keyword chan. Variabel ini memiliki tugas untuk mengirim dan menerima data.
Berikut contoh implementasi channel yang memiliki 3 goroutine baru dieksekusi dan masing-masing gouroutine melakukan proses data lewat channel. Data tersebut akan diterima 3 kali di goroutine utama (main).
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;runtime&amp;quot; ) func main() { runtime.</description></item></channel></rss>